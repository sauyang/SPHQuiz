apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

/******Crashlytics **********/
//apply plugin: 'io.fabric'
/***************************/


//CHANGE ONLY THESE/
// For Playstore VersionCode must always + 1 every release. VersionName for app version
def AndroidSampleVersionCode = 1
def AndroidSampleVersionName = '1.0'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.sauyang.androidsample"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode AndroidSampleVersionCode
        versionName AndroidSampleVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //add signing keys here, using android_sample_66.jks
    signingConfigs {
        release {
            storeFile file('android_sample_66.jks')
            storePassword 'androidsample66'
            keyAlias 'AndroidSample66'
            keyPassword 'androidsample66'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        //Release package mode.
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //can use below as a flag to check if it is debug -> if (!BuildConfig.IS_DEBUG) {}
            buildConfigField "boolean", "IS_DEBUG", "false"
            debuggable false
            jniDebuggable true
            signingConfig signingConfigs.release
            versionNameSuffix ''
        }
        //Debug package mode.
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "true" //when doing a debug build for UI testing, set this to false so the login stuff doesnt show etc
            //  if (BuildConfig.IS_SECURE_FLAG)  do something in java baseClass
            buildConfigField "boolean", "IS_SECURE_FLAG", "false"
            versionNameSuffix '_DEBUG_' + AndroidSampleVersionCode
            signingConfig signingConfigs.release
            applicationIdSuffix ".debug"
//            manifestPlaceholders = [HOCKEYAPP_APP_ID: "949493feea3c40abbd5808b41bb7b95f"]
        }

        //UAT, with releaseMode
        uat.initWith(buildTypes.release)
        uat {
            applicationIdSuffix '.uat'
            versionNameSuffix '_UAT_' + AndroidSampleVersionCode
            buildConfigField "boolean", "IS_SECURE_FLAG", "false"
//            manifestPlaceholders = [HOCKEYAPP_APÃ˜mP_ID: "79919158f356a612344252629fcb2a69"]
        }
        //SIT, with releaseMode
        sit.initWith(buildTypes.uat)
        sit {
            applicationIdSuffix '.sit'
            versionNameSuffix '_SIT_' + AndroidSampleVersionCode
            buildConfigField "boolean", "IS_SECURE_FLAG", "false"
//            manifestPlaceholders = [HOCKEYAPP_APP_ID: "79919158f356a612344252629fcb2a69"]
        }


        //TargetSDKAPI 28 need to use below, For Jenkin output using gradle automatically generate APK
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outFile = output.outputFile
                def outputFileName = outFile.name
                if (outputFileName != null && !outputFileName.contains('-unaligned') && outputFileName.endsWith('.apk')) {
                    def newName = ("AndroidSample_" + variant.buildType.name + "_v" + defaultConfig.versionName + variant.buildType.versionNameSuffix + ".apk");
                    output.outputFileName = "../" + newName
                }
            }
        }
    }

    sourceSets {
        //defines alternate resource folders
        main.res.srcDirs = ['src/main/res', 'src/main/res/location-dependent', file('src/main/module').listFiles()]
    }

   //Solve Cannot inline bytecode built with JVM target 1.8 into bytecode that is 1.6 issue
        kotlinOptions {
            jvmTarget = "1.8"
        }
}

//For libraries path create a libs folder, put aar inside and it will works.
//declare aar in dependencies {},  debugImplementation (name: 'otp-android-4.7.1-debug', ext: 'aar')
//For project libraries path, need to add  ->  implementation project(':libraries:softtoken')
//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//    mavenCentral()
//}


dependencies {

    implementation project(':libraries:WebService')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:29.0.0'
    implementation 'com.android.support:support-annotations:29.0.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.android.support:design:29.0.1'
    implementation 'com.android.support:recyclerview-v7:29.1.0'
    implementation 'com.android.support:support-v4:29.0.0'
    implementation 'com.android.support:support-annotations:29.0.0'
    implementation 'com.google.android.material:material:1.2.0-alpha05'

    //new implement
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    // test
    testImplementation 'junit:junit:4.12'

    //GOOGLE ANALYTICS
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'

    //Firebase Crashlytics
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    //Graph design
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    //Auto resize base on device screen size calculate its approriate DP
    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    //For JSON file read
    implementation 'org.apache.commons:commons-lang3:3.0'

    //new implement

}
//
apply plugin: 'com.google.gms.google-services'
